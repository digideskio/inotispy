#
# Copyright (c) 2011-*, (mt) MediaTemple <mediatemple.net>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#  - Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  - Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CON-
# SEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

[global]

  # By default Inotispy prints it's configuration details to stderr at
  # the beginning of execution. If you'd like to silence this data from
  # being printed to stderr then set this value to 'true'.

  silent = false

  # URI for incomming 0MQ requests. If, for security reasons or other,
  # you want to limit connections to local processes then you may change
  # this value to something like the following:
  #
  #   zmq_uri = ipc:///var/run/inotispy/0
  #
  # See `man zmq` and `man zmq_ipc` for a more detailed description.

  zmq_uri = tcp://*:5559

  # Logging. Inotispy supports 5 logging levels. Going from most verbose
  # to least verbose they are:
  #
  #   trace, debug, notice, warn, error
  #
  # It is recommended in a production environment, especially one where
  # Inotispy is being heavily used, to keep this level at either 'notice',
  # 'warn', or 'error'. If you do not supply a value here, or you supply
  # an invalid one, Inotispy will default to 'notice'.
  #
  # Inotispy can also output it's messages to syslog. By default this
  # is turned off (false). Setting 'log_syslog' to true does not turn
  # off logging to the private log file. If set to true messages will
  # be output to both the private log and syslog.
  #
  # NOTE 1: For syslog, Inotispy will use the LOG_DAEMON facility, (SEE
  #         `man syslog` for more details on facilities) which, on many
  #         platforms, means that your syslogged messages will be output
  #         to '/var/log/daemon.log.
  #
  # NOTE 2: All of the logging variables can be changed in realtime,
  #         meaning if you modify the value here Inotispy will detect
  #         the change and will apply it. This is nice for when things
  #         start going awry in a production environment and you want
  #         to see what's going on under the hood without having to
  #         restart the daemon.

  log_file   = /var/log/inotispy.log
  log_level  = notice
  log_syslog = false

  # Max number of inotify events you wish to have queued up for each root.
  #
  # ** This is not a global value! This is per root **
  # 
  # Though this number is somewhat arbitrary it is recommended that you
  # *not* set it too high. The limit is used to prevent the situation where
  # Inotispy's consumer applications stop consuming inotify events, events
  # are still being queued, and Inotispy happily continues to eat up your
  # system's memory.
  #
  # *Also* this number is not set in stone. It's just a default. If you
  # require a larger queue limit for a specific watched root then, in your
  # client code, you can pass in a differen value when you watch a new root.

  max_inotify_events = 65536

  # The frequency in which inotispy will attempt to do a memory clean
  # on it's internal metadata.
  #
  # servers under heavy load with rapid file system operations may end up
  # with Inotispy's memory usage growing over time. This value sets the
  # frequency at which Inotispy will attempt to clean up it's in-memory
  # metadata. This requires looping through the entire list of directories
  # it thinks it's watching and comparing that to what is actually on the
  # file system. So, for those of you whose performace red flag just went
  # up, yes... this requires a stat() of each directory.
  #
  # If you are watching a large number of directories the overhead of this
  # operation WILL NOT be negligible. It is recommended that you don't do
  # this too often. Once every 5-10 minutes should be sufficient.
  #
  # Set the value to 0 (zero) if you want Inotispy to never perform this
  # operation.  

  memclean_freq = 600

# EOF inotispy.conf
