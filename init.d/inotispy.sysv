#! /bin/sh
#
# chkconfig: - 55 45
# description: Inotispy init script
# processname: inotispy
# config: /etc/sysconfig/inotispy

# Source function library.
. /etc/rc.d/init.d/functions

# Check that networking is up.
if [ "$NETWORKING" = "no" ]; then
    echo "Network is down... can't start inotispy"
    exit 0
fi

PATH=/usr/bin:/sbin:/bin:/usr/sbin
export PATH

[ -f /etc/sysconfig/inotispy ] && . /etc/sysconfig/inotispy
rundir=/var/run/inotispy
lockfile=/var/lock/subsys/inotispy
pidfile=/var/run/inotispy/inotispy.pid
confdumpfile=/var/run/inotispy/config.dump
rootdumpfile=/var/run/inotispy/roots.dump
OPTS="--daemon"
PROGRAM=inotispy
RETVAL=0

if status | grep -q -- '-p' 2>/dev/null; then
    daemonopts="--pidfile $pidfile"
    pidopts="-p $pidfile"
fi

if [ ! -d "$rundir" ]; then
    mkdir $rundir
fi

start() {
    if [ -e "$pidfile" ]; then
        PID=`cat $pidfile`
        if [ -d "/proc/$PID" ]; then
            echo "$PROGRAM (pid  $PID) is running..."
            return 1
        else
            echo "Found stale pid file. Cleaning it up..."
            rm -f $pidfile
        fi
    fi
    echo -n $"Starting Inotispy: "
    daemon $daemonopts $PROGRAM ${OPTS}
    RETVAL=$?
    echo
    [ $RETVAL = 0 ] && touch ${lockfile}
    return $RETVAL
}

stop() {
    echo -n $"Stopping Inotispy: "
    killproc $pidopts $PROGRAM
    RETVAL=$?
    rm -f $confdumpfile
    echo
    [ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}
}

restart() {
    stop
    start
}

rh_status() {
    status $pidopts $PROGRAM
    RETVAL=$?
    return $RETVAL
}

reload() {
    echo -n $"Reloading Inotispy configs: "
    killproc $pidopts $PROGRAM -HUP
    RETVAL=$?
    echo
    return $RETVAL
}

config() {
    if [ -e "$confdumpfile" ]; then
        echo
        cat $confdumpfile
        echo
        echo -n Running as pid:\  
        cat $pidfile
        echo
        echo
        return 0
    fi
}

flush()
{
    echo "Flushing Inotispy watches"
    if [ -e "$rootdumpfile" ]; then
        rm -f $rootdumpfile
    fi
    restart
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    reload)
        reload
        ;;
    stat|status)
        rh_status
        ;;
    conf|config)
        config
        ;;
    flush)
        flush
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|reload|config|flush}"
        exit 1
esac

exit $?
