# Copyright (c) 2011-*, James Conerly <james@jamesconerly.com>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

[inotispy]

  # By default Inotispy prints it's configuration details to stderr at
  # the beginning of execution. If you'd like to silence this data from
  # being printed to stderr then set this value to 'true'.

  silent = false

  # Port for incomming 0MQ requests. It is recommended that you *not*
  # change this value, but if Inotispy's default value conflicts with
  # another application you have running on your system then feel free
  # to change it.

  port = 5555

  # Logging. Inotispy supports 5 logging levels. Going from most verbose
  # to least verbose they are:
  #
  #   trace, debug, notice, warn, error
  #
  # It is recommended in a production environment, especially one where
  # Inotispy is being heavily used, to keep this level at either 'notice',
  # 'warn', or 'error'. If you do not supply a value here, or you supply
  # an invalid one, Inotispy will default to 'notice'.

  log_file  = /var/log/inotispy.log
  log_level = trace

  # Max number of inotify events you wish to have queued up for each root.
  # Though this number is somewhat arbitrary it is recommended that you
  # *not* set it too high. The limit is used to prevent the situation where
  # Inotispy's consumer applications stop consuming inotify events, yet events
  # are still being queued, and Inotispy happily continues to eat up your
  # system's memory.

  max_inotify_events = 65536

# EOF
